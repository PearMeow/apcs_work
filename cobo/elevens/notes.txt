Team LPL: Lawrence Joa, Lior Polischouk, Perry Huang
APCS
L07 -- But These Go Up To Eleven
2022-03-21
time spent: 1.5 hrs

ACTIVITY 2:
Q1: A deck is an ArrayList with any number of cards in it.
Q2: this deck has 6 cards.
Q3: ranks: ["ace", "king", "queen", "jack", "10", "9", "8", "7", "6", "5", "4", "3", "2"]
    suits: ["spades", "hearts", "diamonds", "clubs"]
    pointValues:[11, 10, 10, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2]
Q4: PointValues have to be after ranks, since they correspond to the respective ranks.

ACTIVITY 3:
Q1:
public static String flip(){
  if(Math.random()*3 > 1){
    return "heads";
  }
  return "tails";
}

Q2: public static boolean arePermutations(int x[], int y[]){
  mergesort(x);
  mergesort(y);
  for(int i=0; i<x.length; i++){
    if(x[i]!=y[i]){
      return false;
    }
  }
  return true;
}

Q3: Any 4 length array is possible because it sorts randomly.

Activity 6:
Q1: 5, 4, 2, 6, A, J, K, 5, 2

You can only take out a (5,6), as there are no other pairs summing 11 nor
is there a JQK triplet.

Q2: In order to win, you will need a JQK triplet since you can only take out
pairs for the A-10 cards. Then you would have 1 remaining card unable to be removed.

Q3: No, it's based on the order of the cards in the deck.

Activity7:
Q1:
Variables: deck, board, paired cards

Q2: Look at first card, check if A-10, if so check rest of cards to see whether
it adds to 11. Otherwise look for J Q and K. If no pair/triplet, check next card
until 2nd last index. If paired up, remove those cards, take 2 dealed cards from deck,
and reset back at first card. Otherwise the game is lost. If there are no cards
left on the deck and on the board, the game is won.

Q3: Yes

Q4:
a: It is used in constructor and at start of new game
b: Should be called in isLegal and anotherPlayIsPossible
c: [ J, 6, null, 2, null, null, A, 4, null] --> [ J, 6, 2, A, 4]
d:
public static void printCards(ElevensBoard board){
  List<Integer> cIndexes = board.cardIndexes();
  for(int i=0; i<board.size; i++){
    System.out.print(cIndexes.get(i) +  " ");
  }
}
e: isLegal since you don't want to be comparing null values. anotherPlayIsPossible
already calls for isLegal so you don't need cardIndexes in that.